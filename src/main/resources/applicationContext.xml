<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx  
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/jee  
        http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">


	<description>Spring公共配置</description>

	<!-- 注解支持 -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.tjhx">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


	<!-- JPA实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="defaultPU" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>


	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
	<jpa:repositories base-package="com.tjhx" transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />


	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>


	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!-- production环境 -->
	<beans profile="development,production">
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties" />

		<!-- 数据源配置,使用BoneCP JDBC连接池 -->
		<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
			destroy-method="close">
			<!-- 数据库驱动 -->
			<property name="driverClass" value="${jdbc.driverClassName}" />
			<!-- 相应驱动的jdbcUrl -->
			<property name="jdbcUrl" value="${jdbc.url}" />
			<!-- 数据库的用户名 -->
			<property name="username" value="${jdbc.username}" />
			<!-- 数据库的密码 -->
			<property name="password" value="${jdbc.password}" />
			<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
			<property name="idleConnectionTestPeriodInMinutes" value="${BoneCP.idleConnectionTestPeriod}" />
			<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
			<property name="idleMaxAgeInMinutes" value="${BoneCP.idleMaxAge}" />
			<!-- 每个分区最大的连接数 -->
			<property name="maxConnectionsPerPartition" value="${BoneCP.maxConnectionsPerPartition}" />
			<!-- 每个分区最小的连接数 -->
			<property name="minConnectionsPerPartition" value="${BoneCP.minConnectionsPerPartition}" />
			<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
			<property name="partitionCount" value="${BoneCP.partitionCount}" />
			<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
			<property name="acquireIncrement" value="${BoneCP.acquireIncrement}" />
			<!-- 缓存prepared statements的大小，默认值：0 -->
			<property name="statementsCacheSize" value="${BoneCP.statementsCacheSize}" />
		</bean>
	</beans>
</beans>